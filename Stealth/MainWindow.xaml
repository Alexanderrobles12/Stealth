<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ignore="http://www.galasoft.ch/ignore"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:Custom="http://www.galasoft.ch/mvvmlight" x:Class="Stealth.MainWindow"
        mc:Ignorable="d ignore"
        Height="400"
        Width="572"
        Title="Stealth"
        >

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Skins/MainSkin.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.DataContext>
        <Binding Path="Main" Source="{StaticResource Locator}"/>
    </Window.DataContext>
    <!-- Menu, Main container, StatusBar -->
    <DockPanel x:Name="LayoutRoot">
        <Menu x:Name="MainMenu" IsMainMenu="True" DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="Exit"/>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="About" Command="{Binding AboutCommand}"/>
            </MenuItem>
        </Menu>

        <StatusBar x:Name="MainStatus" DockPanel.Dock="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="100"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <TextBlock Text="{Binding windowsInfoItemList.Count}"/>
            </StatusBarItem>
            <Separator Grid.Column="1"/>
            <StatusBarItem Grid.Column="2"/>
            <Separator Grid.Column="3"/>
            <StatusBarItem Grid.Column="4">
                <TextBlock Text="world"/>
            </StatusBarItem>
        </StatusBar>

        <DockPanel>
            <TextBox x:Name="textFilterInput" DockPanel.Dock="Top"
                     Margin="10" Padding="5,5,0,0" VerticalAlignment="Top">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <Custom:EventToCommand Command="{Binding TitleFilterCommand}" CommandParameter="{Binding ElementName=textFilterInput, Mode=OneWay}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <!--Text="{Binding Path=model.textFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />-->
            <Button x:Name="button" DockPanel.Dock="Top"
                    Content="Refresh" Command="{Binding RefreshCommand}"/>
            <ListBox ItemsSource="{Binding windowsInfoItemList, Mode=TwoWay}"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ScrollViewer.CanContentScroll="false">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <DockPanel MinWidth="200"
                                   Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}">
                            <Grid DockPanel.Dock="Right" Width="40" Visibility="Hidden"/>
                            <Border BorderBrush="Black" BorderThickness="1" DockPanel.Dock="Left">
                                <StackPanel>
                                    <StackPanel Orientation="Vertical">
                                        <DockPanel x:Name="SummaryPanel">
                                            <Label Content="icon" DockPanel.Dock="Left"/>
                                            <Label DockPanel.Dock="Top">
                                                <TextBlock Text="{Binding title}" TextWrapping="Wrap"/>
                                            </Label>
                                            <Label Content="{Binding opacity}" DockPanel.Dock="Left"/>
                                            <Label Content="[x] On top" DockPanel.Dock="Left"/>
                                            <Grid/>
                                        </DockPanel>
                                        <StackPanel x:Name="DetailsPanel" Orientation="Vertical" Visibility="Visible">
                                            <DockPanel x:Name="OpacityPanel">
                                                <Button Content="Reset" Width="70" DockPanel.Dock="Right"
                                                        Command="{Binding Main.RefreshCommand, Source={StaticResource Locator}}"
                                                        CommandParameter="{Binding}"/>
                                                <Slider Value="{Binding opacity}" Maximum="255" MinWidth="100" DockPanel.Dock="Left">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="ValueChanged">
                                                            <Custom:EventToCommand Command="{Binding Main.ChangeOpacityCommand, Source={StaticResource Locator}}"
                                                                                   CommandParameter="{Binding}"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Slider>
                                            </DockPanel>
                                            <CheckBox Content="pin on top" IsChecked="{Binding isTopMost}"
                                                      Command="{Binding Main.SetTopMostCommand, Source={StaticResource Locator}}"
                                                      CommandParameter="{Binding}"/>
                                            <!--<CheckBox Content="IsRemoved" Checked="{Binding isRemoved}" IsEnabled="False"/>-->
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </Border>

                        </DockPanel>

                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Visibility" Value="{Binding isVisible, Converter={StaticResource BoolToVisibility}}" />
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>


        </DockPanel>

        <!--Last child in DockPanel fills the space-->
        <!--<Grid x:Name="MainGrid" >
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="10"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBox x:Name="textFilterInput" Grid.Column="0" Grid.Row="0"
                 Margin="10" Padding="5,5,0,0" VerticalAlignment="Center"
                 Text="{Binding Path=model.textFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <DataGrid x:Name="dataGrid" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1"
                  ItemsSource="{Binding }"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  CanUserSortColumns="True"
                  CanUserDeleteRows="False" SelectionMode="Single"
                  CanUserResizeRows="False">
            </DataGrid>
           
            <Button x:Name="button" Content="Refresh" Grid.Column="1" Grid.Row="1"
                Margin="10" Padding="10"
                Command="{Binding refreshWindowList}"/>
            
            <TextBlock Foreground="Purple"
                   Text="{Binding WelcomeTitle}"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"
                   TextWrapping="Wrap" />
        </Grid>-->
    </DockPanel>
</Window>
